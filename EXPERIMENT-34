import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

data = {'age': [25, 30, 45, 50, 35],
        'blood_pressure': [120, 130, 140, 135, 125],
        'cholesterol': [200, 210, 250, 230, 220],
        'treatment_outcome': ['Good', 'Bad', 'Good', 'Bad', 'Good']}

df = pd.DataFrame(data)
df['outcome_numeric'] = df['treatment_outcome'].map({'Good':1, 'Bad':0})

X = df[['age', 'blood_pressure', 'cholesterol']]
y = df['outcome_numeric']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)

k = int(input("Enter value of k: "))
model = KNeighborsClassifier(n_neighbors=k)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print("Accuracy on test set:", accuracy_score(y_test, y_pred))

age = float(input("Enter patient age: "))
bp = float(input("Enter blood pressure: "))
chol = float(input("Enter cholesterol level: "))

prediction = model.predict([[age, bp, chol]])
print("Predicted treatment outcome:", "Good" if prediction[0]==1 else "Bad")
